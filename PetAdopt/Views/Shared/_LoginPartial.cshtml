@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{ 
    var id = 0;
    if (SignInManager.IsSignedIn(User)) {
        id = Int32.Parse(UserManager.GetUserId(User));
    }

}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))                       
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" asp-route-id="@id" title="Manage">@UserManager.GetUserName(User)</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">
                <img src="~/Images/note.png" /> Register
            </a>
        </li>
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Login" class="nav-link text-dark">
                <img src="~/Images/login.png" /> Login
            </a>
        </li>
    }
</ul>